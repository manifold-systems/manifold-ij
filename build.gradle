import org.gradle.api.tasks.testing.logging.TestLogEvent
import java.util.concurrent.TimeUnit

plugins {
  id 'org.jetbrains.intellij' version '0.2.17'
}

description = 'Manifold :: IJ'

wrapper {
  gradleVersion = '4.4'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

/**
 * Create 'reproducible archives' (JARs will be identical regardless of the platform they are created)
 * https://docs.gradle.org/3.4/userguide/working_with_files.html#sec:reproducible_archives
 */
tasks.withType(AbstractArchiveTask) {
  preserveFileTimestamps = false
  reproducibleFileOrder = true
}

configurations {
  manifoldAll
  manifoldEp
}

allprojects {
  repositories {
    if(!System.getenv('CI')) {
      mavenLocal()
    }
    jcenter()
    maven { url 'https://oss.jfrog.org/artifactory/libs-snapshot' }
  }

  apply plugin: 'java'
  apply plugin: 'org.jetbrains.intellij'
}

File destDir = jar.destinationDir
subprojects {
  tasks.withType( Jar ) {
    // make the manifold-jps-plugin.jar file go in this plugin's dir
    destinationDir = file(destDir)
  }
}

dependencies {
  compile group: 'systems.manifold', name: 'manifold', version: manifoldVersion
  compile group: 'systems.manifold', name: 'manifold-util', version: manifoldVersion
  compile group: 'systems.manifold', name: 'manifold-ext', version: manifoldVersion

  testCompile group: 'junit', name: 'junit', version: '4.12'

  manifoldAll group: 'systems.manifold', name: 'manifold-all', version: manifoldVersion
  manifoldEp group: 'systems.manifold', name: 'manifold-ext-producer-sample', version: manifoldVersion

  compile project('jps-plugin')
}

configurations.all {
  resolutionStrategy.cacheChangingModulesFor 0, TimeUnit.SECONDS //always check for new SNAPSHOTs
}

compileJava {
  options.compilerArgs += ['-proc:none', '-Xplugin:Manifold strings']
}

String getIjVersion() {
  return System.getProperty('ijVersion') ?: defaultIjVersion
}

intellij {
  pluginName project.name
  version getIjVersion() // Ordinarily, just use the version number: '15.0.6' or '2016.3'. Alternatively, the precise API level is OK too: 'IC-143.2370.31'
  plugins = ['ASM Bytecode Outline:0.3.5', 'Psi Viewer:3.28.93'] //include ASM & PsiViewer in sandbox
}

runIde {
  minHeapSize '1g'
  maxHeapSize '2g'
}

patchPluginXml {
  sinceBuild '141.1010'
  untilBuild '999.*'
}

publishPlugin {
  username = System.getenv('JB_PUBLISH_USER')
  password = System.getenv('JB_PUBLISH_PASS')
}

test {
  //uncomment below to show stdout/stderr in console
  //testLogging.showStandardStreams = true

  testLogging {
    events TestLogEvent.PASSED, TestLogEvent.FAILED, TestLogEvent.SKIPPED
  }

  //set a system property in the test JVM containing the path to manifold-all (it could be under ~/.gradle/caches or ~/.m2/repository)
  systemProperties = ['path.to.manifold.all':project.configurations.manifoldAll.singleFile.absolutePath,
                      'path.to.manifold.ep':project.configurations.manifoldEp.files.first()]
}
