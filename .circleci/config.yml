version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/manifold-ij

    environment:
      GRADLE_OPTS: -Dorg.gradle.daemon=false
      TERM: dumb
      TZ: /usr/share/zoneinfo/America/Los_Angeles

#    branches:
#      ignore:
#        - /rel\/.*/
    
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: Java version check
          command: java -version
      - run:
          name: Java location check
          command: ls -al /usr/lib/jvm/
      - run:
          name: Dump env
          command: env
      - run:
          name: Compile project and test classes
          command: ./gradlew jar testClasses --stacktrace
      - save_cache:
          paths:
            - ~/manifold-ij
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

  test8:
    docker:
      - image: circleci/openjdk:8-jdk
      - image: circleci/openjdk:9-jdk

    working_directory: ~/manifold-ij

    environment:
      GRADLE_OPTS: -Dorg.gradle.daemon=false
      TERM: dumb
      TZ: /usr/share/zoneinfo/America/Los_Angeles

    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
      - run:
          name: Java version check
          command: java -version
      - run:
          name: Java location check
          command: ls -al /usr/lib/jvm/
      - run:
          name: Dump env
          command: env
      - run:
          name: Run tests
          command: ./gradlew check --stacktrace
      - run:
          name: Create test metadata folder
          command: sudo mkdir -p ~/junit/xml
      - run:
          name: Create test stdout folder
          command: sudo mkdir -p ~/junit/stdout
      - run:
          name: Collect test metadata
          command: sudo find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/xml/ \;
      - run:
          name: Collect test stdout
          command: sudo find . -type f -regex ".*/build/test-results/.*-output.txt" -exec cp {} ~/junit/stdout/ \;
      - store_artifacts:
          path: ~/junit
      - store_test_results:
          path: ~/junit

  test9:
    docker:
      - image: circleci/openjdk:9-jdk

    working_directory: ~/manifold-ij

    environment:
      GRADLE_OPTS: -Dorg.gradle.daemon=false
      TERM: dumb
      TZ: /usr/share/zoneinfo/America/Los_Angeles

    steps:
      - run:
          name: Add openjdk-8 to machine
          command: sudo apt-get install openjdk-8-jre-headless
      - run:
          name: Java version check
          command: java -version
      - run:
          name: Java location check
          command: ls -al /usr/lib/jvm/
      - run:
          name: Dump env
          command: env
      - run:
          name: Run tests
          command: ./gradlew check --stacktrace

#      - run:
#          name: Run tests
#          command: ./gradlew check --stacktrace
#      - run:
#          name: Create test metadata folder
#          command: sudo mkdir -p ~/junit/
#      - run:
#          name: Collect test metadata
#          command: sudo find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
#      - run:
#          name: Collect test stdout
#          command: sudo find . -type f -regex ".*/build/test-results/.*-output.txt" -exec cp {} ~/junit/ \;
#      - store_artifacts:
#          path: ~/junit
#      - store_test_results:
#          path: ~/junit
#
#      - save_cache:
#          paths:
#            - ~/.gradle
#          key: v1-dependencies-{{ checksum "build.gradle" }}

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test8:
          requires:
            - build
      - test9:
          requires:
            - build